(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{201:function(e,a,i){"use strict";i.r(a);var r=i(0),t=Object(r.a)({},(function(){var e=this,a=e.$createElement,i=e._self._c||a;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("h1",{attrs:{id:"repository"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#repository"}},[e._v("#")]),e._v(" Repository")]),e._v(" "),i("p",[e._v("Usiamo GitHub per il versioning del codice.\nhttps://github.com/orgs/smart-contact/dashboard")]),e._v(" "),i("h2",{attrs:{id:"branch"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#branch"}},[e._v("#")]),e._v(" Branch")]),e._v(" "),i("p",[e._v("I branch da utilizza per ogni progetto sono i seguenti:")]),e._v(" "),i("ul",[i("li",[i("a",{attrs:{href:"#master"}},[i("code",[e._v("Master")])])]),e._v(" "),i("li",[i("a",{attrs:{href:"#develop"}},[i("code",[e._v("Develop")])])]),e._v(" "),i("li",[i("a",{attrs:{href:"#release"}},[i("code",[e._v("Release")])])]),e._v(" "),i("li",[i("a",{attrs:{href:"#hotfix"}},[i("code",[e._v("Hotfix")])])]),e._v(" "),i("li",[i("a",{attrs:{href:"#feature"}},[i("code",[e._v("Feature")])])])]),e._v(" "),i("h3",{attrs:{id:"master"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#master"}},[e._v("#")]),e._v(" Master")]),e._v(" "),i("p",[e._v("Questo è il branch stabile principale da cui vengono avviate le versioni. Tutti i cambiamenti vengono infine inseriti e uniti in questo branch.")]),e._v(" "),i("h3",{attrs:{id:"develop"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#develop"}},[e._v("#")]),e._v(" Develop")]),e._v(" "),i("p",[e._v("Questo è il branch su cui sta lavorando ogni membro del team. Una volta finalizzata una funzionalità viene automaticamente unita al branch develop.")]),e._v(" "),i("h3",{attrs:{id:"release"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#release"}},[e._v("#")]),e._v(" Release")]),e._v(" "),i("p",[e._v("Si tratta di un branch temporaneo creato dal branch master e dal quale le versioni vengono inviate ai server attivi")]),e._v(" "),i("h3",{attrs:{id:"hotfix"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#hotfix"}},[e._v("#")]),e._v(" Hotfix")]),e._v(" "),i("p",[e._v("Si tratta di branch temporanei creati dal branch master e infine uniti nel master con correzioni che non possono attendere e devono attivare un rilascio.")]),e._v(" "),i("h3",{attrs:{id:"feature"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#feature"}},[e._v("#")]),e._v(" Feature")]),e._v(" "),i("p",[e._v("Si tratta di branch temporanei che vengono creati dal branch develop e quindi riuniti nel branch di sviluppo al termine di una funzione.\nIl branch dev'essere rinominato nel seguente modo: "),i("code",[e._v("feature/nome-della-feature")]),e._v("\nNon implemantare più feature in un unico branch.\nSi farà una PR e l'amministratore del progetto verificarà il codice e farà il merge al branch develop.")]),e._v(" "),i("h2",{attrs:{id:"regole"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#regole"}},[e._v("#")]),e._v(" Regole")]),e._v(" "),i("ol",[i("li",[e._v("Ogni nuova pagina o caratteristica distinta deve avere il proprio branch")]),e._v(" "),i("li",[e._v("Se vengono rilevati dei bug dopo un rilascio, i bug vengono corretti nel branch hotfix.")]),e._v(" "),i("li",[e._v("Risolviamo tutti i bug sul computer locale, quindi li uniamo al master.\nIl branch di release è l'unico che genera tag di versione per ridurre al minimo il numero di versioni rilasciate.")]),e._v(" "),i("li",[e._v("I numeri di versione avranno sempre 3 decimali (nel formato MAJOR.MINOR.PATCH) e iniziano con v. Ad es. v1.0.0")])]),e._v(" "),i("ul",[i("li",[e._v("Versione MAJOR quando si apportano modifiche API incompatibili")]),e._v(" "),i("li",[e._v("Versione MINORE quando si aggiunge funzionalità in modo compatibile con le versioni precedenti")]),e._v(" "),i("li",[e._v("Versione PATCH quando si apportano correzioni di bug compatibili con le versioni precedenti.")])]),e._v(" "),i("h2",{attrs:{id:"readme"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#readme"}},[e._v("#")]),e._v(" Readme")]),e._v(" "),i("p",[e._v("Ogni progetto dovrà avere nel readme principale le istruzioni per installare il progetto")]),e._v(" "),i("h2",{attrs:{id:"task"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#task"}},[e._v("#")]),e._v(" Task")]),e._v(" "),i("p",[e._v("I task verranno presi da Trello e dalle ISSUE di github.\nOgni task avrà un branch dedicato (Es: feature/add-links-in-homepage)")])])}),[],!1,null,null,null);a.default=t.exports}}]);